{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport themeReducer from './slices/themeSlice';\nimport authReducer from './slices/authSlice';\nimport contentReducer from './slices/contentSlice';\nimport serviceReducer from './slices/serviceSlice';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['content', 'service']\n};\nconst contentPersistedReducer = persistReducer(persistConfig, contentReducer);\nconst servicePersistedReducer = persistReducer(persistConfig, serviceReducer);\nexport const store = configureStore({\n  reducer: {\n    content: contentPersistedReducer,\n    service: servicePersistedReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST']\n    }\n  }).concat(thunk),\n  devTools: process.env.NODE_ENV !== 'production'\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","persistStore","persistReducer","storage","thunk","themeReducer","authReducer","contentReducer","serviceReducer","persistConfig","key","whitelist","contentPersistedReducer","servicePersistedReducer","store","reducer","content","service","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat","devTools","process","env","NODE_ENV","persistor"],"sources":["/Users/brijesh/Desktop/AI code/contentkosh-app/src/store/index.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\n\nimport themeReducer from './slices/themeSlice';\nimport authReducer from './slices/authSlice';\nimport contentReducer from './slices/contentSlice';\nimport serviceReducer from './slices/serviceSlice';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['content', 'service'],\n};\n\nconst contentPersistedReducer = persistReducer(persistConfig, contentReducer);\nconst servicePersistedReducer = persistReducer(persistConfig, serviceReducer);\n\nexport const store = configureStore({\n  reducer: {\n    content: contentPersistedReducer,\n    service: servicePersistedReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST'],\n      },\n    }).concat(thunk),\n  devTools: process.env.NODE_ENV !== 'production'\n});\n\nexport const persistor = persistStore(store);\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,KAAK,MAAM,aAAa;AAE/B,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,cAAc,MAAM,uBAAuB;AAClD,OAAOC,cAAc,MAAM,uBAAuB;AAElD,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXP,OAAO;EACPQ,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS;AAClC,CAAC;AAED,MAAMC,uBAAuB,GAAGV,cAAc,CAACO,aAAa,EAAEF,cAAc,CAAC;AAC7E,MAAMM,uBAAuB,GAAGX,cAAc,CAACO,aAAa,EAAED,cAAc,CAAC;AAE7E,OAAO,MAAMM,KAAK,GAAGd,cAAc,CAAC;EAClCe,OAAO,EAAE;IACPC,OAAO,EAAEJ,uBAAuB;IAChCK,OAAO,EAAEJ;EACX,CAAC;EACDK,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAC,iBAAiB;IACpC;EACF,CAAC,CAAC,CAACC,MAAM,CAAClB,KAAK,CAAC;EAClBmB,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK;AACrC,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAG1B,YAAY,CAACa,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}