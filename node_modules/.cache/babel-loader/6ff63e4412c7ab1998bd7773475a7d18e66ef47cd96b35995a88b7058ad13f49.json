{"ast":null,"code":"import React from'react';import{createRoot}from'react-dom/client';import App from'./App';import reportWebVitals from'./reportWebVitals';import{jsx as _jsx}from\"react/jsx-runtime\";const container=document.getElementById('root');const root=createRoot(container);root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(App,{})}));// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();// Register service worker\nif('serviceWorker'in navigator){window.addEventListener('load',()=>{navigator.serviceWorker.register('/service-worker.js').then(()=>{// Service worker registered successfully\n}).catch(error=>{// eslint-disable-next-line no-console\nconsole.error('Service worker registration failed:',error);});});}","map":{"version":3,"names":["React","createRoot","App","reportWebVitals","jsx","_jsx","container","document","getElementById","root","render","StrictMode","children","navigator","window","addEventListener","serviceWorker","register","then","catch","error","console"],"sources":["/Users/brijesh/Desktop/AI code/contentkosh-app/src/index.js"],"sourcesContent":["import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// Register service worker\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker\n      .register('/service-worker.js')\n      .then(() => {\n        // Service worker registered successfully\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.error('Service worker registration failed:', error);\n      });\n  });\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,UAAU,KAAQ,kBAAkB,CAC7C,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhD,KAAM,CAAAC,SAAS,CAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CACjD,KAAM,CAAAC,IAAI,CAAGR,UAAU,CAACK,SAAS,CAAC,CAElCG,IAAI,CAACC,MAAM,cACTL,IAAA,CAACL,KAAK,CAACW,UAAU,EAAAC,QAAA,cACfP,IAAA,CAACH,GAAG,GAAE,CAAC,CACS,CACpB,CAAC,CAED;AACA;AACA;AACAC,eAAe,CAAC,CAAC,CAEjB;AACA,GAAI,eAAe,EAAI,CAAAU,SAAS,CAAE,CAChCC,MAAM,CAACC,gBAAgB,CAAC,MAAM,CAAE,IAAM,CACpCF,SAAS,CAACG,aAAa,CACpBC,QAAQ,CAAC,oBAAoB,CAAC,CAC9BC,IAAI,CAAC,IAAM,CACV;AAAA,CACD,CAAC,CACDC,KAAK,CAAEC,KAAK,EAAK,CAChB;AACAC,OAAO,CAACD,KAAK,CAAC,qCAAqC,CAAEA,KAAK,CAAC,CAC7D,CAAC,CAAC,CACN,CAAC,CAAC,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}