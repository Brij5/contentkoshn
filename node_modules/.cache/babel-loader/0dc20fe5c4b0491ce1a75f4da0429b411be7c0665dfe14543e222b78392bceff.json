{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.error = null;\n    },\n    loginFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.error = null;\n    },\n    registerStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    registerSuccess: (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      localStorage.setItem('token', action.payload.token);\n    },\n    registerFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n    },\n    updateProfileStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    updateProfileSuccess: (state, action) => {\n      state.loading = false;\n      state.user = {\n        ...state.user,\n        ...action.payload\n      };\n    },\n    updateProfileFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout,\n  registerStart,\n  registerSuccess,\n  registerFailure,\n  updateProfileStart,\n  updateProfileSuccess,\n  updateProfileFailure,\n  clearError\n} = authSlice.actions;\n\n// Selectors\nexport const selectIsAuthenticated = state => state.auth.isAuthenticated;\nexport const selectUser = state => state.auth.user;\nexport const selectToken = state => state.auth.token;\nexport const selectAuthLoading = state => state.auth.isLoading;\nexport const selectAuthError = state => state.auth.error;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","token","isAuthenticated","isLoading","error","authSlice","name","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","logout","registerStart","loading","registerSuccess","localStorage","setItem","registerFailure","updateProfileStart","updateProfileSuccess","updateProfileFailure","clearError","actions","selectIsAuthenticated","auth","selectUser","selectToken","selectAuthLoading","selectAuthError","reducer"],"sources":["/Users/brijesh/Desktop/AI code/contentkosh-app/src/store/slices/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: (state) => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.error = null;\n    },\n    loginFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.error = null;\n    },\n    registerStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    registerSuccess: (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      localStorage.setItem('token', action.payload.token);\n    },\n    registerFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n    },\n    updateProfileStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    updateProfileSuccess: (state, action) => {\n      state.loading = false;\n      state.user = { ...state.user, ...action.payload };\n    },\n    updateProfileFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n  },\n});\n\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout,\n  registerStart,\n  registerSuccess,\n  registerFailure,\n  updateProfileStart,\n  updateProfileSuccess,\n  updateProfileFailure,\n  clearError,\n} = authSlice.actions;\n\n// Selectors\nexport const selectIsAuthenticated = (state) => state.auth.isAuthenticated;\nexport const selectUser = (state) => state.auth.user;\nexport const selectToken = (state) => state.auth.token;\nexport const selectAuthLoading = (state) => state.auth.isLoading;\nexport const selectAuthError = (state) => state.auth.error;\n\nexport default authSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}