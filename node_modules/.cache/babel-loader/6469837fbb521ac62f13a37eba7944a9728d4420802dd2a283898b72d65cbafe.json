{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport themeReducer from './slices/themeSlice';\nimport authReducer from './slices/authSlice';\nimport contentReducer from './slices/contentSlice';\nimport serviceReducer from './slices/serviceSlice';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['theme', 'auth'] // Only persist theme and auth state\n};\nconst persistedReducer = persistReducer(persistConfig, {\n  theme: themeReducer,\n  auth: authReducer,\n  content: contentReducer,\n  services: serviceReducer\n});\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST']\n    }\n  }).concat(thunk),\n  devTools: process.env.NODE_ENV !== 'production'\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","persistStore","persistReducer","storage","thunk","themeReducer","authReducer","contentReducer","serviceReducer","persistConfig","key","whitelist","persistedReducer","theme","auth","content","services","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat","devTools","process","env","NODE_ENV","persistor"],"sources":["/Users/brijesh/Desktop/AI code/contentkosh-app/src/store/index.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\n\nimport themeReducer from './slices/themeSlice';\nimport authReducer from './slices/authSlice';\nimport contentReducer from './slices/contentSlice';\nimport serviceReducer from './slices/serviceSlice';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['theme', 'auth'] // Only persist theme and auth state\n};\n\nconst persistedReducer = persistReducer(persistConfig, {\n  theme: themeReducer,\n  auth: authReducer,\n  content: contentReducer,\n  services: serviceReducer\n});\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST']\n      }\n    }).concat(thunk),\n  devTools: process.env.NODE_ENV !== 'production'\n});\n\nexport const persistor = persistStore(store);\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,KAAK,MAAM,aAAa;AAE/B,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,cAAc,MAAM,uBAAuB;AAClD,OAAOC,cAAc,MAAM,uBAAuB;AAElD,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXP,OAAO;EACPQ,SAAS,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAC/B,CAAC;AAED,MAAMC,gBAAgB,GAAGV,cAAc,CAACO,aAAa,EAAE;EACrDI,KAAK,EAAER,YAAY;EACnBS,IAAI,EAAER,WAAW;EACjBS,OAAO,EAAER,cAAc;EACvBS,QAAQ,EAAER;AACZ,CAAC,CAAC;AAEF,OAAO,MAAMS,KAAK,GAAGjB,cAAc,CAAC;EAClCkB,OAAO,EAAEN,gBAAgB;EACzBO,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAC,iBAAiB;IACpC;EACF,CAAC,CAAC,CAACC,MAAM,CAACnB,KAAK,CAAC;EAClBoB,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK;AACrC,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAG3B,YAAY,CAACgB,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}